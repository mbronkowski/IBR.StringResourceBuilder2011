
<UserControl x:Class="IBR.StringResourceBuilder2011.SRBControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:vsfx="clr-namespace:Microsoft.VisualStudio.Shell;assembly=Microsoft.VisualStudio.Shell.14.0"
             xmlns:vs_shell="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.14.0"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             Name="SRB"
             Background="{DynamicResource {x:Static vsfx:VsBrushes.ToolWindowBackgroundKey}}"
             IsVisibleChanged="StringResBuilderWindow_IsVisibleChanged">
  
  <UserControl.Resources>
    <!--DataGrid-->
    <Style TargetType="DataGrid">
      <Setter Property="AutoGenerateColumns" Value="False"/>
      <Setter Property="CanUserResizeColumns" Value="True"/>
      <Setter Property="CanUserReorderColumns" Value="False"/>
      <Setter Property="CanUserSortColumns" Value="False"/>
      <Setter Property="CanUserAddRows" Value="False"/>
      <Setter Property="CanUserDeleteRows" Value="False"/>
      <Setter Property="CanUserResizeRows" Value="False"/>
      <Setter Property="RowHeaderWidth" Value="0"/>
      <Setter Property="SelectionMode" Value="Single"/>
      <Setter Property="SelectionUnit" Value="Cell"/>
      <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
      <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
      <Setter Property="RowBackground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
      <Setter Property="AlternatingRowBackground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ComboBoxDisabledBackgroundBrushKey}}"/>
    
      <Setter Property="AlternationCount" Value="2"/>
      <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.TaskListGridLinesBrushKey}}"/>
      <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.TaskListGridLinesBrushKey}}"/>
      <!--<Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>-->
    </Style>
    <Style TargetType="DataGridColumnHeader">
       
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
       
    </Style>
    <Style TargetType="TextBox">
       
        <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
       
    </Style>
    <!-- make selection background blue even when DataGrid is unfocused (VS2012) -->
    <Style x:Key="CellStyle" TargetType="{x:Type DataGridCell}">
      <Style.Triggers>
        <Trigger Property="IsSelected" Value="True">
            <Setter Property="Foreground" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ComboBoxFocusedBackgroundBrushKey}}" />
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="DGCellStyle" TargetType="DataGridCell">
        <Style.Triggers>
            <DataTrigger Binding="{Binding AISugestionAsAt}" Value="True">
                <Setter Property="Foreground" Value="White"></Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding AISugestionAsAt}" Value="True">
                <Setter Property="Background" Value="Purple"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--StatusBar-->
    <Style TargetType="StatusBar">
      <Setter Property="Background" Value="{DynamicResource {x:Static vs_shell:EnvironmentColors.ToolWindowBackgroundBrushKey}}"/>
      <Setter Property="VerticalContentAlignment" Value="Bottom"/>
    </Style>
  </UserControl.Resources>
  
  <Grid >
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <DataGrid Grid.Row="1" Name="dataGrid1" SelectedCellsChanged="dataGrid1_SelectedCellsChanged" MouseDoubleClick="dataGrid1_MouseDoubleClick" GotFocus="dataGrid1_GotFocus" 
              CellStyle='{StaticResource CellStyle}' PreviewKeyDown="control_PreviewKeyDown">
        <DataGrid.RowStyle>
            <Style TargetType="DataGridRow"> 
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsAttribut}" Value="True">
                        <Setter Property="Foreground" Value="Blue"></Setter>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding AISugestionAsAt}" Value="True">
                        <Setter Property="Foreground" Value="Purple"></Setter>
                    </DataTrigger>
                    
                    <DataTrigger Binding="{Binding SkipAsAt}" Value="True">
                        <Setter Property="Foreground" Value="Red"></Setter>
                    </DataTrigger>
                  
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="FontWeight" Value="Bold"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </DataGrid.RowStyle>
        <DataGrid.Columns>
        <DataGridTextColumn Header="Name" Width="*" Binding="{Binding Path=Name}"/>
        <DataGridTextColumn Header="Text" Width="2*" IsReadOnly="True" Binding="{Binding Path=Text}"/>
        <DataGridTextColumn Header="Location" Width="Auto" IsReadOnly="True" Binding="{Binding Path=Location}"/>
        
        <DataGridTextColumn Header="TextLine " Width="3*" IsReadOnly="True" Binding="{Binding Path=LineText}"/>
        <DataGridTemplateColumn Header="Is Attribut" Width="Auto" IsReadOnly="False">
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <CheckBox IsChecked="{Binding IsAttribut, UpdateSourceTrigger=PropertyChanged}" />
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        <DataGridTemplateColumn  Width="Auto" IsReadOnly="False"    >
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <CheckBox IsChecked="{Binding SkipAsAt, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"  PreviewKeyDown="control_PreviewKeyDown"/>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>

            <DataGridTemplateColumn.Header>
                <Grid  >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="50"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Set @|" Width="Auto" />
                    <Button Grid.Column="1" x:Name="btnAtForAllStrings" Content="All"  HorizontalAlignment="Right" Click="btnAtForAllStrings_OnClick"></Button>
                </Grid>
            </DataGridTemplateColumn.Header>
           
        </DataGridTemplateColumn>
        
        <DataGridTemplateColumn  Width="Auto"  Header="Sugestia AI" IsReadOnly="True" CellStyle="{StaticResource DGCellStyle}" >
            <DataGridTemplateColumn.CellTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBox>@</TextBox> <CheckBox IsChecked="{Binding AISugestionAsAt}"  IsEnabled="False"/> <TextBox Text="{Binding Precision}"></TextBox> <TextBox>%</TextBox>
                    </StackPanel>
                </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
        </DataGridTemplateColumn>
        

        
      </DataGrid.Columns>
    </DataGrid>
    <StatusBar Grid.Row="2" Name="statusBar1">
      <StatusBarItem>
        <ProgressBar Name="progressBar1" Width="200" Height="20" />
      </StatusBarItem>
        <Separator></Separator>
    <StatusBarItem>
        <TextBox> AI Status:</TextBox>
    </StatusBarItem>
    <StatusBarItem>
        <ProgressBar Name="progressBarAi" Visibility="Hidden" Width="100" Height="20" />
    </StatusBarItem>  
    <StatusBarItem>
        <TextBox Name="aiStatus"> </TextBox>
    </StatusBarItem>
    </StatusBar>
  </Grid>
</UserControl>